link numbers

# Histogram

# ----------------------------------------------------------------

record histogramData(range,bars,width,limits,frequencies)

# ----------------------------------------------------------------

procedure getHistogramData(d)

  (hd := histogramData()).frequencies :=
    getFrequencies(
      hd.bars,
      hd.limits :=
        getLimits(
          hd.bars,mi,
          (hd.width :=
             real(hd.range :=
                    max(d) +
                    (h := 0.5) -
                    (mi := min(d) - h)) /
             (hd.bars := round(sqrt(*d))))),
      d)

  return hd

end

procedure drawHistogram(h,w)

  # Generate histogram
  x := 10 ; d := 55
  every i := 1 to h.bars do {
    DrawRectangle(w,x,10,50,h.frequencies[i]*12)
    x +:= d
  }

end

procedure showData(h)

  write("Range: ",h.range)
  write("Width: ",h.width)
  write("Bars: ",h.bars)

  writes("Limits: ") ; every writes(!h.limits," ") ; write()
  writes("Frequencies: ") ; every writes(!h.frequencies," ") ; write()

end

# ----------------------------------------------------------------

procedure createSortedData(s)

  # Generate data
  d := list(s)
  every i := 1 to s do d[i] := ?100

  return sort(d)

end

procedure getLimits(bars,mi,width)

  # Calculate limits
  limits := list(bars+1) ; limits[1] := mi
  every i := 2 to *limits do
    limits[i] := round(limits[i-1] + width)

  return limits

end

procedure getFrequencies(bars,limits,d)

  # Calculate frequencies
  frequencies := list(bars,0) ; fIndex := 1
  every v := !d do
    (if v <= limits[fIndex+1] then
      frequencies[fIndex] else
      fIndex)
    +:= 1

  return frequencies

end

# ----------------------------------------------------------------

procedure main()

  w := open("Histogram", "g")

  # Number of data
  s := 100

  # Data
  d := createSortedData(s)

  # Calculate histogram properties
  h := getHistogramData(d)

  # Display histogram
  drawHistogram(h,w)
  WSync()

  # Display data on command line
  showData(h)

  delay(5e3)

  close(w)

end

# ----------------------------------------------------------------

