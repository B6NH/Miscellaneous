
% Get random integer X, Min <= X < Max ;
randominteger IS OPERATION Min Max {
  first floor ((random 1) * (Max - Min)) + Min }

% Create random array of 0s and 1s ;
createarray IS OPERATION Height Width {
  EACH randominteger (Height Width reshape single 0 2) }

% Check how many neighbors cell has ;
countneighbors IS OPERATION Position Board {
  Row := first Position ;
  Col := second Position ;
  Posx := [(Row - 1) (Col - 1), (Row - 1) Col,
           (Row - 1) (Col + 1), Row (Col - 1),
            Row (Col + 1), (Row + 1) (Col - 1),
           (Row + 1) Col, (Row + 1) (Col + 1)] ;
  Posx := Posx EACHLEFT in grid Board sublist Posx ;
  sum (Posx EACHLEFT pick Board) }
  
  
% Create array with with number of neighbors for every cell ;
allneighbors IS OPERATION Board {
  (grid Board) EACHLEFT countneighbors Board }

% Find new cell state ;
nextcell IS OPERATION State Neighbors {
  IF (State = 0) and (Neighbors = 3) THEN
    1
  ELSEIF (State = 1) and not (Neighbors in 2 3) THEN
    0
  ELSE
    State
  ENDIF }

% Find new board state ;
nextboard IS OPERATION Board {
  Board EACHBOTH nextcell (allneighbors Board) }
  
spaces IS { write '---------------' ; }
  
main IS {
  Brd := createarray 7 7 ; write Brd ; spaces ;
  FOR I WITH count 4 DO
    Brd := nextboard Brd ; write Brd ; spaces ;
  ENDFOR ; }
  

  
